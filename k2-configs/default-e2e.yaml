---
deployment:
  cluster: "{{ lookup('env','K2_CLUSTER_NAME') }}"
  serviceCidr: 10.32.0.0/12
  serviceDNS: 10.32.0.2
  clusterDomain: cluster.local
  coreos:
    -
      name: allNodes
      version: current
      channel: stable
      rebootStrategy: off
  keypair:
    -
      name: krakenKey
      publickeyFile: "{{ lookup('env','K2_KEY_LOCATION') }}/id_rsa.pub"
      privatekeyFile: "{{ lookup('env','K2_KEY_LOCATION') }}/id_rsa"
  kubeConfig:
    -
      name: krakenKubeConfig
      version: v1.5.6
      hyperkubeLocation: gcr.io/google_containers/hyperkube
  containerConfig:
    -
      name: dockerconfig
      runtime: docker
      type: distro
  fabric:
    provider: flannel
    options:
      containers:
        kubePolicyController:
          version: v0.5.1
          location: calico/kube-policy-controller
        etcd:
          version: v3.1.0
          location: quay.io/coreos/etcd
        calicoCni:
          version: v1.4.2
          location: calico/cni
        calicoNode:
          version: v1.0.0-rc1
          location: quay.io/calico/node
        flannel:
          version: v0.6.1
          location: quay.io/coreos/flannel
      network:
        network: 10.128.0.0/10
        subnetLen: 22
        subnetMin: 10.128.0.0
        subnetMax: 10.191.255.255
        backend:
          type: vxlan
  provider: aws
  providerConfig:
    resourcePrefix:
    vpc: 10.0.0.0/16
    region: us-east-2
    subnet:
      -
        name: az-1
        az: us-east-2a
        cidr: 10.0.0.0/18
      -
        name: az-2
        az: us-east-2b
        cidr: 10.0.64.0/18
      -
        name: az-3
        az: us-east-2c
        cidr: 10.0.128.0/17
    egressAcl:
      -
        protocol: "-1"
        rule_no: 100
        action: "allow"
        cidr_block: "0.0.0.0/0"
        from_port: 0
        to_port: 0
    ingressAcl:
      -
        protocol: "-1"
        rule_no: 100
        action: "allow"
        cidr_block: "0.0.0.0/0"
        from_port: 0
        to_port: 0
    authentication:
      accessKey:
      accessSecret:
      credentialsFile:
      credentialsProfile:
    ingressSecurity:
      -
        from_port: 22
        to_port: 22
        protocol: "TCP"
        cidr_blocks: ["0.0.0.0/0"]
      -
        from_port: 443
        to_port: 443
        protocol: "TCP"
        cidr_blocks: ["0.0.0.0/0"]
    egressSecurity:
      -
        from_port: 0
        to_port: 0
        protocol: "-1"
        cidr_blocks: ["0.0.0.0/0"]
  nodepool:
    -
      name: etcd
      count: 5
      mounts:
        -
          device: sdf
          path: /var/lib/docker
          forceFormat: true
        -
          device: sdg
          path: /ephemeral
          forceFormat: false
      providerConfig:
        type: t2.small
        subnet: ["az-1", "az-2", "az-3"]
        tags:
          -
            key: comments
            value: "Cluster etcd"
        storage:
          -
            type: ebs_block_device
            opts:
              device_name: sdf
              volume_type: gp2
              volume_size: 100
              delete_on_termination: true
              snapshot_id:
              encrypted: false
          -
            type: ebs_block_device
            opts:
              device_name: sdg
              volume_type: gp2
              volume_size: 10
              delete_on_termination: true
              snapshot_id:
              encrypted: false
      keypair: krakenKey
      containerConfig: dockerconfig
      coreos: allNodes
    -
      name: etcdEvents
      count: 5
      mounts:
        -
          device: sdf
          path: /var/lib/docker
          forceFormat: true
        -
          device: sdg
          path: /ephemeral
          forceFormat: false
      providerConfig:
        type: t2.small
        subnet: ["az-1", "az-2", "az-3"]
        tags:
          -
            key: comments
            value: "Cluster events etcd"
        storage:
          -
            type: ebs_block_device
            opts:
              device_name: sdf
              volume_type: gp2
              volume_size: 100
              delete_on_termination: true
              snapshot_id:
              encrypted: false
          -
            type: ebs_block_device
            opts:
              device_name: sdg
              volume_type: gp2
              volume_size: 10
              delete_on_termination: true
              snapshot_id:
              encrypted: false
      keypair: krakenKey
      containerConfig: dockerconfig
      coreos: allNodes
    -
      name: masterNodes
      count: 3
      mounts:
        -
          device: sdf
          path: /var/lib/docker
          forceFormat: true
      providerConfig:
        type: m4.large
        subnet: ["az-1", "az-2", "az-3"]
        tags:
          -
            key: comments
            value: "Master instances"
        storage:
          -
            type: ebs_block_device
            opts:
              device_name: sdf
              volume_type: gp2
              volume_size: 100
              delete_on_termination: true
              snapshot_id:
              encrypted: false
      keypair: krakenKey
      kubeConfig: krakenKubeConfig
      containerConfig: dockerconfig
      coreos: allNodes
    -
      name: clusterNodes
      count: 5
      keypair: krakenKey
      mounts:
        -
          device: sdf
          path: /var/lib/docker
          forceFormat: true
      providerConfig:
        type: c4.xlarge
        subnet: ["az-1", "az-2", "az-3"]
        tags:
          -
            key: comments
            value: "Cluster plain nodes"
        storage:
          -
            type: ebs_block_device
            opts:
              device_name: sdf
              volume_type: gp2
              volume_size: 100
              delete_on_termination: true
              snapshot_id:
              encrypted: false
      kubeConfig: krakenKubeConfig
      containerConfig: dockerconfig
      coreos: allNodes
    -
      name: specialNodes
      count: 2
      mounts:
        -
          device: sdf
          path: /var/lib/docker
          forceFormat: true
      keypair: krakenKey
      providerConfig:
        type: m4.large
        subnet: ["az-1", "az-2", "az-3"]
        tags:
          -
            key: comments
            value: "Cluster special nodes"
        storage:
          -
            type: ebs_block_device
            opts:
              device_name: sdf
              volume_type: gp2
              volume_size: 100
              delete_on_termination: true
              snapshot_id:
              encrypted: false
      kubeConfig: krakenKubeConfig
      containerConfig: dockerconfig
      coreos: allNodes
  etcd:
    -
      name: etcd
      clientPorts: [2379, 4001]
      clusterToken: espouse-monger-rarely
      nodepool: etcd
      peerPorts: [2380]
      ssl: true
      version: v3.1.0
    -
      name: etcdEvents
      clientPorts: [2381]
      clusterToken: animism-training-chastity
      nodepool: etcdEvents
      peerPorts: [2382]
      ssl: true
      version: v3.1.0
  master:
    nodepool: masterNodes
    loadbalancer: cloud
    infra:
      etcd: etcd
    events:
      etcd: etcdEvents
  node:
    -
      name: clusterNodes
      nodepool: clusterNodes
    -
      name: specialNodes
      nodepool: specialNodes
  clusterServices:
    debug: true
    repos:
      -
        name: atlas
        url: http://atlas.cnct.io
    kubedns:
        name: kubedns
        namespace: kube-system
        cluster_ip: 10.32.0.2
        dns_domain: cluster.local
    services:
      -
        name: heapster
        repo: atlas
        chart: heapster
        namespace: kube-system
        version: 0.1.0
  readiness:
    type: percent
    value: 90
    wait: 600
